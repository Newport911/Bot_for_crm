from pyrogram import Client, filters
from pyrogram.types import ReplyKeyboardMarkup, KeyboardButton


from cachetools import TTLCache

import os
from dotenv import load_dotenv


import requests
import httpx
from requests.auth import HTTPBasicAuth


load_dotenv()


API_ID = os.getenv("api_id")
API_HASH = os.getenv("api_hash")
BOT_TOKEN = os.getenv("bot_token")
API_URL = os.getenv("API_URL")
USERNAME = os.getenv("PRODUCTS_API_USERNAME")
PASSWORD = os.getenv("PRODUCTS_API_PASSWORD")

cache = TTLCache(maxsize=1, ttl=300)

TIMEOUT = 30.0
REQUEST_TIMEOUT = httpx.Timeout(TIMEOUT)


app = Client(
    "my_bot",
    api_id=API_ID, api_hash=API_HASH,
    bot_token=BOT_TOKEN
)

@app.on_message(filters.command("start") & filters.private)
def start(client, message):
    keyboard = ReplyKeyboardMarkup(
        [
            [KeyboardButton("–£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞"), KeyboardButton("–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å")],
            [KeyboardButton("–ù–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏"), KeyboardButton("–ü–ª–µ–Ω–∫–∞ –≤ –Ω–∞–ª–∏—á–∏–∏")]
        ],
        resize_keyboard=True
    )
    message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=keyboard)

@app.on_message(filters.text & filters.private & filters.regex("^–£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞$"))
def status_order(client, message):
    message.reply_text("–£–∑–Ω–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞")

@app.on_message(filters.text & filters.private & filters.regex("^–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å$"))
def help_request(client, message):
    manager_username = "phsquat_chat"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    message.reply_text(f"–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: https://t.me/{manager_username}")



@app.on_message(filters.text & filters.private & filters.regex("^–ù–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏$"))
def social_media(client, message):
    message.reply_text("–°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏")


"""–ö–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤. –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä—ã —É–∂–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –∫—ç—à, –æ–Ω–∏ –±—É–¥—É—Ç –∏–∑–≤–ª–µ—á–µ–Ω—ã –∏–∑
 –∫—ç—à–∞. –ï—Å–ª–∏ –Ω–µ—Ç, –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –∫—ç—à –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –≤ –±—É–¥—É—â–µ–º. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ 
 –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö, –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.")"""
@app.on_message(filters.text & filters.private & filters.regex("^–ü–ª–µ–Ω–∫–∞ –≤ –Ω–∞–ª–∏—á–∏–∏$"))
def available_products(client, message):
    if "products" in cache:
        product_list = cache["products"]
        print("–ü–æ–¥–Ω—è–ª–∏ —Å –∫—ç—à–∞")
    else:
        try:
            url = API_URL
            response = requests.get(url, auth=HTTPBasicAuth(USERNAME, PASSWORD), timeout=TIMEOUT)
            response.raise_for_status()
            products = response.json()
            product_list = "üì¶ **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:**\n\n"
            for product in products:
                quantity = product['quantity']
                if quantity < 2:
                    quantity_text = "–û—Å—Ç–∞–ª–∞—Å—å –ø–∞—Ä–∞ —à—Ç—É–∫"
                elif quantity < 10:
                    quantity_text = "–û—Å—Ç–∞–ª–∞—Å—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10"
                elif quantity < 20:
                    quantity_text = "–ú–Ω–æ–≥–æ"
                else:
                    quantity_text = "–¶–µ–ª–∞—è –≥–æ—Ä–∞"
                product_list += f"üîπ **–ù–∞–∑–≤–∞–Ω–∏–µ:** {product['name']}\nüí∞ –¶–µ–Ω–∞: {product['price']}\nüìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity_text}\n\n"
            cache["products"] = product_list
        except requests.exceptions.RequestException as e:
            message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ {e}")
            return

    message.reply_text(product_list)

if __name__ == "__main__":
    app.run()